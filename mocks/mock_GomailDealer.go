// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mylockerteam/mailSender (interfaces: GomailDealer)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	gomail_v2 "gopkg.in/gomail.v2"
	reflect "reflect"
)

// MockGomailDealer is a mock of GomailDealer interface
type MockGomailDealer struct {
	ctrl     *gomock.Controller
	recorder *MockGomailDealerMockRecorder
}

// MockGomailDealerMockRecorder is the mock recorder for MockGomailDealer
type MockGomailDealerMockRecorder struct {
	mock *MockGomailDealer
}

// NewMockGomailDealer creates a new mock instance
func NewMockGomailDealer(ctrl *gomock.Controller) *MockGomailDealer {
	mock := &MockGomailDealer{ctrl: ctrl}
	mock.recorder = &MockGomailDealerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGomailDealer) EXPECT() *MockGomailDealerMockRecorder {
	return m.recorder
}

// Dial mocks base method
func (m *MockGomailDealer) Dial() (gomail_v2.SendCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dial")
	ret0, _ := ret[0].(gomail_v2.SendCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Dial indicates an expected call of Dial
func (mr *MockGomailDealerMockRecorder) Dial() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dial", reflect.TypeOf((*MockGomailDealer)(nil).Dial))
}
